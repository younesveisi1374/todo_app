[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "todo_app",
        "description": "todo_app",
        "isExtraImport": true,
        "detail": "todo_app",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_project.todo_app.migrations.0001_initial",
        "description": "todo_project.todo_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Task\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "todo_project.todo_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_project.todo_app.migrations.0002_task_updated_at",
        "description": "todo_project.todo_app.migrations.0002_task_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"todo_app\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"task\",\n            name=\"updated_at\",\n            field=models.DateTimeField(auto_now=True),\n        ),",
        "detail": "todo_project.todo_app.migrations.0002_task_updated_at",
        "documentation": {}
    },
    {
        "label": "TodoAppConfig",
        "kind": 6,
        "importPath": "todo_project.todo_app.apps",
        "description": "todo_project.todo_app.apps",
        "peekOfCode": "class TodoAppConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"todo_app\"",
        "detail": "todo_project.todo_app.apps",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "todo_project.todo_app.models",
        "description": "todo_project.todo_app.models",
        "peekOfCode": "class Task(models.Model):\n    title = models.CharField(max_length=200)\n    completed = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "todo_project.todo_app.models",
        "documentation": {}
    },
    {
        "label": "task_manager",
        "kind": 2,
        "importPath": "todo_project.todo_app.views",
        "description": "todo_project.todo_app.views",
        "peekOfCode": "def task_manager(request):\n    tasks = Task.objects.all()\n    edit_task = None\n    if request.method == 'POST':\n        if 'edit_task_id' in request.POST:\n            edit_task = get_object_or_404(Task, pk=request.POST['edit_task_id'])\n            edit_task.title = request.POST['title']\n            edit_task.save()\n            return redirect('task_manager')\n        else:",
        "detail": "todo_project.todo_app.views",
        "documentation": {}
    },
    {
        "label": "mark_complete",
        "kind": 2,
        "importPath": "todo_project.todo_app.views",
        "description": "todo_project.todo_app.views",
        "peekOfCode": "def mark_complete(request, task_id):\n    task = get_object_or_404(Task, pk=task_id)\n    task.completed = True\n    task.save()\n    return redirect('task_manager')\ndef edit_task(request, task_id):\n    edit_task = get_object_or_404(Task, pk=task_id)\n    if request.method == 'POST':\n        edit_task.title = request.POST['title']\n        edit_task.save()",
        "detail": "todo_project.todo_app.views",
        "documentation": {}
    },
    {
        "label": "edit_task",
        "kind": 2,
        "importPath": "todo_project.todo_app.views",
        "description": "todo_project.todo_app.views",
        "peekOfCode": "def edit_task(request, task_id):\n    edit_task = get_object_or_404(Task, pk=task_id)\n    if request.method == 'POST':\n        edit_task.title = request.POST['title']\n        edit_task.save()\n        return redirect('task_manager')\n    tasks = Task.objects.all()\n    return render(request, 'todo_app/task_manager.html', {'tasks': tasks, 'edit_task': edit_task, 'edit_mode': True})\ndef delete_task(request, task_id):\n    task = get_object_or_404(Task, pk=task_id)",
        "detail": "todo_project.todo_app.views",
        "documentation": {}
    },
    {
        "label": "delete_task",
        "kind": 2,
        "importPath": "todo_project.todo_app.views",
        "description": "todo_project.todo_app.views",
        "peekOfCode": "def delete_task(request, task_id):\n    task = get_object_or_404(Task, pk=task_id)\n    task.delete()\n    return redirect('task_manager')",
        "detail": "todo_project.todo_app.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_project.todo_project.asgi",
        "description": "todo_project.todo_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "todo_project.todo_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-rf6i3h!#pj=o9sce$$c@vpwxyxwrwecae(#7$wehw0t-eq(m!o\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-rf6i3h!#pj=o9sce$$c@vpwxyxwrwecae(#7$wehw0t-eq(m!o\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    'todo_app',",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    'todo_app',\n]\nMIDDLEWARE = [",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"todo_project.urls\"",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "ROOT_URLCONF = \"todo_project.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "WSGI_APPLICATION = \"todo_project.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'todo_app',\n        'USER': 'root',\n        'PASSWORD': '2236541',\n        'HOST': 'localhost',",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'todo_app',\n        'USER': 'root',\n        'PASSWORD': '2236541',\n        'HOST': 'localhost',\n        'PORT': '3306',\n    }\n}",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "\"\"\"DATABASES",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "\"\"\"DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\"\"\"\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),\n]",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),\n]\n# Default primary key field type",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'todo_app/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "todo_project.todo_project.settings",
        "description": "todo_project.todo_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "todo_project.todo_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo_project.todo_project.urls",
        "description": "todo_project.todo_project.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.task_manager, name='task_manager'),\n    path('add/', views.task_manager, name='add_task'),\n    path('complete/<int:task_id>/', views.mark_complete, name='mark_complete'),\n    path('edit/<int:task_id>/', views.edit_task, name='edit_task'),\n    path('delete/<int:task_id>/', views.delete_task, name='delete_task'),\n]",
        "detail": "todo_project.todo_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_project.todo_project.wsgi",
        "description": "todo_project.todo_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "todo_project.todo_project.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "todo_project.manage",
        "description": "todo_project.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"todo_project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "todo_project.manage",
        "documentation": {}
    }
]